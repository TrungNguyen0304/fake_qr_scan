import React, { useState, useEffect } from "react";
import { useNavigate, useParams } from "react-router-dom";
import io from "socket.io-client";
import { FiClock, FiCheckCircle, FiXCircle, FiLoader } from "react-icons/fi";

const PendingApproval = () => {
  const navigate = useNavigate();
  const { paymentId } = useParams();
  const [status, setStatus] = useState("loading");

  const SERVER_BASE = "http://192.168.1.24:8001";

  useEffect(() => {
    if (!paymentId) {
      console.error("‚ùå Thi·∫øu paymentId trong URL!");
      return;
    }

    // ‚úÖ G·ªçi API ƒë·ªÉ ƒë√°nh d·∫•u "scanned"
    fetch(`${SERVER_BASE}/api/qrcode/scan/${paymentId}`)
      .then((res) => {
        if (!res.ok) throw new Error("Kh√¥ng th·ªÉ ƒë√°nh d·∫•u scanned");
        return res.text();
      })
      .then((text) => {
        console.log("üì• Server scan response:", text);
      })
      .catch((err) => {
        console.error("‚ùå Scan API error:", err);
      });

    // ‚úÖ K·∫øt n·ªëi socket
    const socket = io(SERVER_BASE);
    console.log("üì¶ Theo d√µi paymentId:", paymentId);
    socket.emit("join-payment-room", paymentId);

    socket.on("payment-status-updated", ({ status }) => {
      console.log("üí° Status updated:", status);
      if (status === "success") {
        setStatus("success");
      } else if (status === "failed") {
        setStatus("failed");
        localStorage.removeItem("clientId");
      }
    });

    return () => {
      socket.disconnect();
    };
  }, [paymentId, navigate]);

  const renderStatusContent = () => {
    switch (status) {
      case "loading":
        return (
          <div className="text-center space-y-6">
            <div className="relative">
              <div className="w-24 h-24 md:w-32 md:h-32 mx-auto bg-gradient-to-br from-blue-100 to-indigo-100 rounded-full flex items-center justify-center shadow-lg">
                <FiClock className="text-4xl md:text-5xl text-blue-600 animate-pulse" />
              </div>
              <div className="absolute inset-0 w-24 h-24 md:w-32 md:h-32 mx-auto border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin"></div>
            </div>
            <div className="space-y-3">
              <h2 className="text-2xl md:text-3xl font-bold text-gray-800">
                ƒêang ch·ªù x√°c nh·∫≠n
              </h2>
              <p className="text-gray-600 text-sm md:text-base leading-relaxed px-4">
                Giao d·ªãch c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c x·ª≠ l√Ω. Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t.
              </p>
            </div>
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mx-4">
              <div className="flex items-start space-x-3">
                <FiLoader className="text-blue-600 mt-1 flex-shrink-0" />
                <div className="text-left">
                  <p className="text-sm font-medium text-blue-800">
                    Th√¥ng tin giao d·ªãch 
                  </p>
                  <p className="text-xs text-blue-600 mt-1">ID: {paymentId}</p>
                </div>
              </div>
            </div>
          </div>
        );

      case "success":
        return (
          <div className="text-center space-y-6">
            <div className="relative">
              <div className="w-24 h-24 md:w-32 md:h-32 mx-auto bg-gradient-to-br from-green-100 to-emerald-100 rounded-full flex items-center justify-center shadow-lg">
                <FiCheckCircle className="text-4xl md:text-5xl text-green-600" />
              </div>
              <div className="absolute inset-0 w-24 h-24 md:w-32 md:h-32 mx-auto border-4 border-green-200 rounded-full animate-ping opacity-75"></div>
            </div>
            <div className="space-y-3">
              <h2 className="text-2xl md:text-3xl font-bold text-green-600">
                Giao d·ªãch th√†nh c√¥ng!
              </h2>
            </div>
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mx-4">
              <p className="text-sm text-green-800">
                ‚úÖ Giao d·ªãch c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n v√† ho√†n t·∫•t
              </p>
            </div>
          </div>
        );

      case "failed":
        return (
          <div className="text-center space-y-6">
            <div className="relative">
              <div className="w-24 h-24 md:w-32 md:h-32 mx-auto bg-gradient-to-br from-red-100 to-rose-100 rounded-full flex items-center justify-center shadow-lg">
                <FiXCircle className="text-4xl md:text-5xl text-red-600" />
              </div>
            </div>
            <div className="space-y-3">
              <h2 className="text-2xl md:text-3xl font-bold text-red-600">
                Giao d·ªãch th·∫•t b·∫°i
              </h2>
              <p className="text-gray-600 text-sm md:text-base">
                ƒêang chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng k√Ω...
              </p>
            </div>
            <div className="bg-red-50 border border-red-200 rounded-lg p-4 mx-4">
              <p className="text-sm text-red-800">
                ‚ùå Giao d·ªãch kh√¥ng th·ªÉ ho√†n t·∫•t. Vui l√≤ng th·ª≠ l·∫°i sau.
              </p>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="w-full max-w-md mx-auto">
        <div className="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden">
          <div className="bg-gradient-to-r from-blue-600 to-indigo-600 px-6 py-4">
            <h1 className="text-white text-lg md:text-xl font-semibold text-center">
              Tr·∫°ng th√°i giao d·ªãch
            </h1>
          </div>
          <div className="p-6 md:p-8">{renderStatusContent()}</div>
        </div>
      </div>
    </div>
  );
};

export default PendingApproval;
